// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: statistics.sql

package repository

import (
	"context"
)

const getStatisticsBetweenDates = `-- name: GetStatisticsBetweenDates :one
SELECT count(*) FROM
workouts
WHERE user_id = ?1 AND
completed_on >= ?2 AND
completed_on <= ?3
`

type GetStatisticsBetweenDatesParams struct {
	UserID    string      `json:"user_id"`
	StartDate interface{} `json:"start_date"`
	EndDate   interface{} `json:"end_date"`
}

func (q *Queries) GetStatisticsBetweenDates(ctx context.Context, arg GetStatisticsBetweenDatesParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, getStatisticsBetweenDates, arg.UserID, arg.StartDate, arg.EndDate)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const getStatisticsSinceDate = `-- name: GetStatisticsSinceDate :one
SELECT count(*) FROM
workouts
WHERE user_id = ?1 AND
completed_on >= ?2
`

type GetStatisticsSinceDateParams struct {
	UserID    string      `json:"user_id"`
	StartDate interface{} `json:"start_date"`
}

func (q *Queries) GetStatisticsSinceDate(ctx context.Context, arg GetStatisticsSinceDateParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, getStatisticsSinceDate, arg.UserID, arg.StartDate)
	var count int64
	err := row.Scan(&count)
	return count, err
}
